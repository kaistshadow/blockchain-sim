import "libc.so-types";
import "libpthread.so-types";

# <pthread.h>

int   pthread_atfork(void *, void *, void *);

int   pthread_attr_destroy(pthread_attr_t *);
int   pthread_attr_getaffinity_np(pthread_attr_t *, size_t, void *);
int   pthread_attr_getdetachstate(pthread_attr_t *, +pthread_detach_state_e *);
int   pthread_attr_getguardsize(pthread_attr_t *, +size_t *);
int   pthread_attr_getinheritsched(pthread_attr_t *, +pthread_inherit_sched_e *);
int   pthread_attr_getschedparam(pthread_attr_t *, +sched_param *);
int   pthread_attr_getschedpolicy(pthread_attr_t *, +sched_policy_e *);
int   pthread_attr_getscope(pthread_attr_t *, +pthread_scope_e *);
int   pthread_attr_getstack(pthread_attr_t *, +void **, +size_t *);
int   pthread_attr_getstacksize(pthread_attr_t *, +size_t *);
int   pthread_attr_init(pthread_attr_t *);
int   pthread_attr_setaffinity_np(pthread_attr_t *, size_t, void *);
int   pthread_attr_setdetachstate(pthread_attr_t *, pthread_detach_state_e);
int   pthread_attr_setguardsize(pthread_attr_t *, size_t);
int   pthread_attr_setinheritsched(pthread_attr_t *, pthread_inherit_sched_e);
int   pthread_attr_setschedparam(pthread_attr_t *, sched_param *);
int   pthread_attr_setschedpolicy(pthread_attr_t *, sched_policy_e);
int   pthread_attr_setscope(pthread_attr_t *, pthread_scope_e);
int   pthread_attr_setstack(pthread_attr_t *, void *, size_t);
int   pthread_attr_setstacksize(pthread_attr_t *, size_t);

int   pthread_barrier_destroy(pthread_barrier_t *);
int   pthread_barrier_init(pthread_barrier_t *, pthread_barrierattr_t *, uint);
pthread_barrier_e pthread_barrier_wait(pthread_barrier_t *);

int   pthread_barrierattr_destroy(pthread_barrierattr_t *);
int   pthread_barrierattr_getpshared(pthread_barrierattr_t *, +pthread_pshared_e *);
int   pthread_barrierattr_init(pthread_barrierattr_t *);
int   pthread_barrierattr_setpshared(pthread_barrierattr_t *, pthread_pshared_e);

int   pthread_cancel(pthread_t);

int   pthread_cond_broadcast(pthread_cond_t *);
int   pthread_cond_destroy(pthread_cond_t *);
int   pthread_cond_init(pthread_cond_t *, pthread_condattr_t *);
int   pthread_cond_signal(pthread_cond_t *);
int   pthread_cond_timedwait(pthread_cond_t *, pthread_mutex_t *, timespec *);
int   pthread_cond_wait(pthread_cond_t *, pthread_mutex_t *);

int   pthread_condattr_destroy(pthread_condattr_t *);
int   pthread_condattr_getclock(pthread_condattr_t *, +clockid_t *);
int   pthread_condattr_getpshared(pthread_condattr_t *, +pthread_pshared_e *);
int   pthread_condattr_init(pthread_condattr_t *);
int   pthread_condattr_setclock(pthread_condattr_t *, clockid_t);
int   pthread_condattr_setpshared(pthread_condattr_t *, pthread_pshared_e);

int   pthread_create(+pthread_t *, pthread_attr_t *, void *, void *);
int   pthread_detach(pthread_t);
int   pthread_equal(pthread_t, pthread_t);
void  pthread_exit(void *);
int   pthread_getaffinity_np(pthread_t, size_t, void *);
int   pthread_getattr_default_np(pthread_attr_t *);
int   pthread_getattr_np(pthread_t, pthread_attr_t *);
int   pthread_getconcurrency();
int   pthread_getcpuclockid(pthread_t, +clockid_t *);
int   pthread_getname_np(pthread_t, +string, size_t);
int   pthread_getschedparam(pthread_t, +sched_policy_e *, +sched_param *);
void *pthread_getspecific(pthread_key_t);
int   pthread_join(pthread_t, +void **);

int   pthread_key_create(+pthread_key_t *, void *);
int   pthread_key_delete(pthread_key_t);

int   pthread_mutex_consistent(pthread_mutex_t *);
int   pthread_mutex_consistent_np(pthread_mutex_t *);
int   pthread_mutex_destroy(pthread_mutex_t *);
int   pthread_mutex_getprioceiling(pthread_mutex_t *, +int *);
int   pthread_mutex_init(pthread_mutex_t *, pthread_mutexattr_t *);
int   pthread_mutex_lock(pthread_mutex_t *);
int   pthread_mutex_setprioceiling(pthread_mutex_t *, int, +int *);
int   pthread_mutex_timedlock(pthread_mutex_t *, timespec *);
int   pthread_mutex_trylock(pthread_mutex_t *);
int   pthread_mutex_unlock(pthread_mutex_t *);

int   pthread_mutexattr_destroy(pthread_mutexattr_t *);
int   pthread_mutexattr_getprioceiling(pthread_mutexattr_t *, +int *);
int   pthread_mutexattr_getprotocol(pthread_mutexattr_t *, +pthread_mutex_protocol_e *);
int   pthread_mutexattr_getpshared(pthread_mutexattr_t *, +pthread_pshared_e *);
int   pthread_mutexattr_getrobust(pthread_mutexattr_t *, +pthread_mutex_robust_e *);
int   pthread_mutexattr_getrobust_np(pthread_mutexattr_t *, +pthread_mutex_robust_e *);
int   pthread_mutexattr_gettype(pthread_mutexattr_t *, +pthread_mutex_type_e *);
int   pthread_mutexattr_init(pthread_mutexattr_t *);
int   pthread_mutexattr_setprioceiling(pthread_mutexattr_t *, int);
int   pthread_mutexattr_setprotocol(pthread_mutexattr_t *, pthread_mutex_protocol_e);
int   pthread_mutexattr_setpshared(pthread_mutexattr_t *, pthread_pshared_e);
int   pthread_mutexattr_setrobust(pthread_mutexattr_t *, pthread_mutex_robust_e);
int   pthread_mutexattr_setrobust_np(pthread_mutexattr_t *, pthread_mutex_robust_e);
int   pthread_mutexattr_settype(pthread_mutexattr_t *, pthread_mutex_type_e);

int   pthread_once(pthread_once_t *, void *);

int   pthread_rwlock_destroy(pthread_rwlock_t *);
int   pthread_rwlock_init(pthread_rwlock_t *, pthread_rwlockattr_t *);
int   pthread_rwlock_rdlock(pthread_rwlock_t *);
int   pthread_rwlock_timedrdlock(pthread_rwlock_t *, timespec *);
int   pthread_rwlock_timedwrlock(pthread_rwlock_t *, timespec *);
int   pthread_rwlock_tryrdlock(pthread_rwlock_t *);
int   pthread_rwlock_trywrlock(pthread_rwlock_t *);
int   pthread_rwlock_unlock(pthread_rwlock_t *);
int   pthread_rwlock_wrlock(pthread_rwlock_t *);

int   pthread_rwlockattr_destroy(pthread_rwlockattr_t *);
int   pthread_rwlockattr_getkind_np(pthread_rwlockattr_t *, +pthread_rwlock_kind_e *);
int   pthread_rwlockattr_getpshared(pthread_rwlockattr_t *, +pthread_pshared_e *);
int   pthread_rwlockattr_init(pthread_rwlockattr_t *);
int   pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *, pthread_rwlock_kind_e);
int   pthread_rwlockattr_setpshared(pthread_rwlockattr_t *, pthread_pshared_e);

pthread_t pthread_self();
int   pthread_setaffinity_np(pthread_t, size_t, void *);
int   pthread_setattr_default_np(pthread_attr_t *);
int   pthread_setcancelstate(pthread_cancel_state_e, +pthread_cancel_state_e *);
int   pthread_setcanceltype(pthread_cancel_type_e, +pthread_cancel_type_e *);
int   pthread_setconcurrency(int);
int   pthread_setname_np (pthread_t, string);
int   pthread_setschedparam(pthread_t, sched_policy_e, sched_param *);
int   pthread_setschedprio(pthread_t, int);
int   pthread_setspecific(pthread_key_t, void *);

int   pthread_spin_destroy(pthread_spinlock_t *);
int   pthread_spin_init(pthread_spinlock_t *, pthread_pshared_e);
int   pthread_spin_lock(pthread_spinlock_t *);
int   pthread_spin_trylock(pthread_spinlock_t *);
int   pthread_spin_unlock(pthread_spinlock_t *);

void  pthread_testcancel();

int   pthread_timedjoin_np(pthread_t, +void **, timespec *);
int   pthread_tryjoin_np(pthread_t, +void **);

# <signal.h>

int    pthread_kill(pthread_t, signum);
int    pthread_sigmask(int, sigset_t *, +sigset_t *);
